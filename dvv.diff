diff --git a/utils.py b/utils.py
index 0eae4eb..d8369bc 100644
--- a/utils.py
+++ b/utils.py
@@ -2,6 +2,7 @@ import urlparse
 import httplib
 from ws4py.client.threadedclient import WebSocketClient
 import Queue
+import signal
 
 class HttpResponse:
     def __init__(self, method, url,
@@ -36,6 +37,8 @@ class HttpResponse:
                 self._load()
             else:
                 self._async_load()
+        else:
+            self.res = self.conn.getresponse()
 
     def _get_status(self):
         return self.res.status
@@ -59,13 +62,37 @@ class HttpResponse:
         self.res = self.conn.getresponse()
         self.headers = dict( (k.lower(), v) for k, v in self.res.getheaders() )
 
-    def read(self):
+    """def read(self):
         data =  self.res.read(10240)
         if data:
             return data
         else:
             self.close()
-            return None
+            return None"""
+
+    # read byte-by-byte until timeout expires or null-byte occured.
+    # such features needed to test streaming transports
+    def read(self, timeout = 1):
+        def throw():
+            raise 'TIMEOUT'
+        old = signal.signal(signal.SIGALRM, throw)
+        signal.alarm(timeout) 
+        data = ''
+        try:
+            while True:
+                c = self.res.read(1)
+                if not c:
+                    self.close()
+                    break
+                elif c == '\000':
+                    break
+                data += c
+        except:
+            print('TIMEOUT')
+        finally:
+            signal.signal(signal.SIGALRM, old)
+        signal.alarm(0)
+        return data
 
 def GET(url, **kwargs):
     return HttpResponse('GET', url, **kwargs)
